{"version":3,"sources":["images/dog.jpg","images/dog2.jpeg","images/dog3.jpeg","components/Form.js","components/Card.js","components/Front.js","components/IntroCards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroSliderConfigs","spaceBetween","navigation","nextEl","prevEl","Form","props","CreateSlider","className","isDesktop","dogs","map","photo","index","key","onClick","setState","img","ToggleImage","id","src","alt","style","display","margin","prevState","showImgSlider","FormChange","event","target","name","value","handleSumbit","preventDefault","addCharacter","state","culture","class","desc","newId","this","toggle","onSubmit","width","height","type","placeholder","onChange","defaultValue","rows","Component","Card","useState","flipped","set","image","rebuildOnUpdate","clickable","Front","fill","newCard","cardInfo","character","IntroCards","transNotDesktop","useSpring","to","transform","from","transDesktop","div","characters","Race","dog","dog2","dog3","exampleCharacters","App","CloseInfo","showInfo","CreateForm","length","Add","ToggleForm","showForm","push","updatePredicate","bind","window","addEventListener","removeEventListener","innerWidth","position","examples","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8761f4c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.af24ba59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog2.56c9730f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/dog3.c3f141f5.jpeg\";","import './form.css'\r\nimport React, { Component } from 'react';\r\nimport {IoMdCloseCircle} from 'react-icons/io'\r\nimport {FaUserCircle} from 'react-icons/fa'\r\nimport 'swiper/css/swiper.css'\r\nimport Swiper from 'react-id-swiper'\r\nimport './card.css'\r\n\r\n\r\nconst HeroSliderConfigs={\r\n  spaceBetween: 30,\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev'\r\n  }\r\n}\r\n\r\nexport default class Form extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n      showImgSlider: false,\r\n      name: '',\r\n      culture: '',\r\n      class: '',\r\n      desc: '',\r\n      img: null,\r\n      id: this.props.newId + 1\r\n    }\r\n}\r\n\r\nCreateSlider=()=>{\r\n  \r\n  return (\r\n   <div >\r\n     <h5 className=\"form-text\">Choose Portrait</h5>\r\n     {this.props.isDesktop?\r\n        ( <div className=\"flex-row\" >\r\n        {this.props.dogs.map((photo, index) =>(\r\n        <div className=\"img-wrapper\" key={index} ><img onClick={() => { this.setState({img:photo}); this.ToggleImage();}} className=\"full-card-img\" id=\"swiper-image\" src={photo} alt=\"dog\"/></div>))}\r\n        </div>)\r\n     :\r\n        ( <Swiper {...HeroSliderConfigs}>\r\n        {this.props.dogs.map((photo, index) =>(\r\n        <div className=\"card\" key={index}><img onClick={() => { this.setState({img:photo}); this.ToggleImage();}} style={{display:'block', margin:'auto'}}  className=\"card-img-top\" id=\"swiper-image\" src={photo} alt=\"dog\"/></div> ))}\r\n       </Swiper>)}\r\n  </div> )\r\n    \r\n  \r\n}\r\nToggleImage=()=>{\r\n \r\n  this.setState(prevState =>({\r\n    showImgSlider: !prevState.showImgSlider\r\n  }))\r\n}\r\nFormChange=(event)=>{\r\n   this.setState({[event.target.name]: event.target.value})\r\n}\r\nhandleSumbit = (event) => {\r\n  event.preventDefault()\r\n  this.props.addCharacter(this.state)\r\n  \r\n}\r\nrender(){\r\n\r\n    return(\r\n     \r\n     \r\n        <div className=\"form-overlay border-corners border-style\">\r\n          {this.state.showImgSlider? this.CreateSlider() :(<div > <IoMdCloseCircle className=\"icon close-circle\"\r\n          onClick={this.props.toggle}/>\r\n              <form className=\"grid-system\" onSubmit={this.handleSumbit}>\r\n                  {this.state.img !== null? (<div className=\"img-container\"><img className=\"full-card-img\" src={this.state.img} onClick={this.ToggleImage} \r\n              alt=\"Choose portrait\"/></div>)  : (<FaUserCircle style={{width: '200px', height:'auto', margin:'auto'}} onClick={this.ToggleImage}/>) }\r\n                <div className=\"char column\"> \r\n                <input name=\"name\" className=\"form-control\" type=\"text\" placeholder=\"Enter name\"\r\n              onChange={this.FormChange}></input>\r\n              \r\n              <input  className=\"form-control\" name=\"culture\" type=\"text\"\r\n              onChange={this.FormChange} placeholder=\"Enter Race\"></input>\r\n                    \r\n      <select onChange={this.FormChange} name=\"class\" className=\"form-control\" id=\"inputGroupSelect02\">\r\n          <option defaultValue>Choose class...</option>\r\n          <option value=\"Tank\">Tank</option>\r\n          <option value=\"Paladin\">Paladin</option>\r\n          <option value=\"Healer\">Healer</option>\r\n        </select>\r\n</div>\r\n<div className=\"desc\">\r\n<h5 className=\"form-text\">Description</h5>\r\n<div >\r\n  <textarea name=\"desc\" onChange={this.FormChange} className=\" form-control\" rows=\"5\"></textarea>\r\n  </div>\r\n</div>\r\n        <input className=\"form-button border-corners\" value=\"Create\" type=\"submit\"></input>\r\n    </form> </div>\r\n    )}\r\n        </div>\r\n      \r\n    )\r\n    \r\n}\r\n\r\n}","import './card.css'\r\nimport './form.css'\r\nimport React, {useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n const Card =(props) =>{\r\n    \r\n    const [flipped, set] = useState(false)\r\n   \r\n    return(\r\n       <div className={\"card-wrapper \" + (flipped? 'flip':'')} >\r\n           \r\n           <div className=\"border-style grid-system full-card\"onClick={()=> set(state =>!state)}  >\r\n          \r\n       <div className=\"img-container\">\r\n       <img className=\"full-card-img\" src={props.image} alt=\"Card cap\"></img></div>\r\n       <div className=\" char border-corners\">\r\n           <div>\r\n           <div className=\"card-text\">\r\n       <h4 className=\"card-title\">{props.name}</h4>\r\n       <h5 className=\"card-title\">Class: {props.class}</h5>\r\n       <h5 className=\"card-title\">Culture: {props.culture}</h5></div>\r\n       </div></div>\r\n      \r\n       <div className=\"desc\">\r\n   <p className=\"card-title\">{props.desc}</p>\r\n       </div>\r\n       <div className=\"skills\"></div>\r\n       </div>\r\n       \r\n         \r\n        \r\n        <div className=\" card border-style card-style \" onClick={()=> set(state =>!state)}  >\r\n        <img className=\"card-img-top\" src={props.image} alt=\"Card cap\"></img>\r\n        <div className=\"card-body border-corners\">\r\n    <h4 className=\"card-title\">{'Name: ' + props.name}</h4>\r\n    <h5 className=\"card-title\">{'Class: ' + props.class}</h5>\r\n   \r\n        </div>\r\n        </div>\r\n        \r\n        </div>\r\n      \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Card","import './front.css'\r\nimport React, { Component} from 'react';\r\nimport Card from './Card' \r\nimport 'swiper/css/swiper.css'\r\nimport Swiper from 'react-id-swiper'\r\nimport {AiFillPlusCircle} from 'react-icons/ai'\r\n\r\n\r\n\r\nconst HeroSliderConfigs={\r\n  spaceBetween: 30,\r\n  rebuildOnUpdate: true,\r\n  clickable: true,\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev'\r\n  }\r\n}\r\n\r\nexport default class Front extends Component{\r\n\r\n\r\nrender(){\r\n   \r\n    \r\n\r\n    return(\r\n      \r\n       <div>\r\n        <AiFillPlusCircle fill=\"white\" onClick={this.props.newCard}className=\"icon plus\"/>\r\n        {this.props.isDesktop ? (\r\n          <div className=\"row\">\r\n          {this.props.cardInfo.map((character) =>(\r\n           <Card  key={character.id} name={character.name} culture={character.culture} class={character.class}image={character.img} desc={character.desc} />\r\n           ))}\r\n          </div>) \r\n           : \r\n           (<Swiper {...HeroSliderConfigs}>\r\n              {this.props.cardInfo.map((character) =>(\r\n               <div key={character.id}><Card name={character.name}\r\n                class={character.class} desc={character.desc} culture={character.culture} image={character.img}/></div> ))}\r\n           </Swiper>)}\r\n\r\n        \r\n        </div>\r\n       \r\n    )\r\n\r\n\r\n}\r\n\r\n}\r\n","import React from 'react'\r\nimport { useSpring, animated as a} from 'react-spring';\r\n\r\n const IntroCards=(props)=>{\r\n\r\n    const transNotDesktop = useSpring({\r\n        to:  { transform: `translateX(${((props.id+1)*100)-300 }px) rotate(${((props.id+1)*20)-60 }deg)`},\r\n        from: { transform:  `translateX(0px) rotate(0deg)`},\r\n    })\r\n\r\nconst transDesktop = useSpring({\r\n    to:  { transform: `translateX(${((props.id+1)*100)-300 }px) rotate(${((props.id+1)*20)-60 }deg)`},\r\n    from: { transform:  `translateX(0px) rotate(0deg)`},\r\n})\r\n\r\nreturn(\r\n\r\n    <a.div className=\"card intro-card border-style\"  style={props.isDesktop?transDesktop:transNotDesktop} >\r\n    <img className=\"card-img-top\" src={props.image} alt=\"Card cap\"></img>\r\n    <div className=\"card-body border-corners\">\r\n<h4 className=\"card-title\">{'Name: ' + props.name}</h4>\r\n<h5 className=\"card-title\">{'Class: ' + props.class}</h5>\r\n\r\n    </div>\r\n    </a.div>\r\n)\r\n        }\r\n        export default IntroCards","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './style.css';\r\nimport Form from './components/Form'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Front from './components/Front';\r\nimport dog from './images/dog.jpg'\r\nimport dog2 from './images/dog2.jpeg'\r\nimport dog3 from './images/dog3.jpeg'\r\nimport IntroCards from './components/IntroCards';\r\nimport {GiBrutalHelm} from 'react-icons/gi'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst characters = [\r\n  {id: 1, name:'Heran', Race:'Aserai',class:'Healer',desc:'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',img:dog},\r\n  {id: 2, name:'Jacob', Race:'Breton',class:'Tank',desc:'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',img:dog2},\r\n  {id: 3, name:'Steve', Race:'Wood elf',class:'Acrobat',desc:'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',img:dog3}\r\n\r\n]\r\nconst exampleCharacters = [\r\n  {id: 1, name:'Heran', Race:'Aserai',class:'Healer',desc:'',img:dog },\r\n  {id: 2, name:'Jacob', Race:'Breton',class:'Tank',desc:'',img:dog2},\r\n  {id: 3, name:'Steve', Race:'Wood elf',class:'Acrobat',desc:'',img:dog3}\r\n\r\n]\r\n\r\nclass App extends Component {\r\nconstructor(){\r\n  super()\r\n  this.state={\r\n    showInfo : true,\r\n    showForm : false,\r\n    isDesktop: false //This is where I am having problems\r\n  };\r\n\r\n  this.updatePredicate = this.updatePredicate.bind(this);\r\n}\r\n  CloseInfo =() =>{\r\n    this.setState({\r\n     showInfo : false\r\n    });\r\n  }\r\n CreateForm=()=>{\r\n   return (\r\n    \r\n       <Form newId={characters[characters.length -1].id} dogs={[dog,dog2,dog3]} isDesktop={this.state.isDesktop} addCharacter={this.Add} toggle={this.ToggleForm} />\r\n   \r\n   )\r\n }\r\n ToggleForm=()=>{\r\n  this.setState(prevState =>({\r\n    showForm: !prevState.showForm\r\n  }))\r\n }\r\n Add=(state)=>{\r\ncharacters.push(state)\r\nthis.ToggleForm()\r\n }\r\n \r\n\r\ncomponentDidMount() {\r\nthis.updatePredicate();\r\nwindow.addEventListener(\"resize\", this.updatePredicate);\r\n}\r\n\r\ncomponentWillUnmount() {\r\nwindow.removeEventListener(\"resize\", this.updatePredicate);\r\n}\r\n\r\nupdatePredicate() {\r\nthis.setState({ isDesktop: window.innerWidth > 425 });\r\n}\r\n  \r\n  render(){\r\n  return (\r\n    <div  className=\"App\">\r\n  <div className=\"header\">\r\n           <div className=\"logo-container\">\r\n        <GiBrutalHelm style={{position: 'relative',height: '200px', width: 'auto', display:'block', margin:'auto'}} fill=\"white\"/>\r\n        </div>\r\n      <div className=\"intro\">\r\n      <div className=\"text-container\">\r\n        <h2>Create your character!</h2>\r\n        <p >With this simple website create your next roleplaying character for the upcoming game or D&D session.</p>\r\n        \r\n        </div>\r\n       \r\n      <div className=\"card-collection\">\r\n        {exampleCharacters.map((character) =>(\r\n            \r\n             <IntroCards key={character.id} isDesktop={this.state.isDesktop} id={character.id} name={character.name} culture={character.culture} class={character.class}image={character.img}/>\r\n           \r\n            ))}\r\n            </div>\r\n       \r\n        </div>   \r\n     {this.state.showForm? this.CreateForm() : null}\r\n     <Front newCard={this.ToggleForm} isDesktop={this.state.isDesktop} examples={exampleCharacters} cardInfo ={characters}/> \r\n    \r\n     \r\n    </div>\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}